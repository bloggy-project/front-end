##workflow의 이름 지정
name: Bloggy-CI-CD
##동작 트리거 설정
on:
  ##Bloggy-Test 워크플로우가 통과하면 동작
  workflow_run:
    workflows: ['Bloggy-Test']
    types:
      - completed

jobs:
  Build-and-Deploy:
    ##runs-on : 작업환경 설정
    runs-on: ubuntu-latest
    env:
      Container: bloggy-front
      Image: ${{ secrets.DOCKERHUB_NICKNAME }}/bloggy:latest
      APPLICATION: ${{secrets.NEXT_PUBLIC_API_KEY}}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - run: touch .env #env 파일 생성
      - run: echo "${{env.APPLICATION}}" > .env #env파일 내용 채움

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build and push
        uses: docker/build-push-action@v4
        with:
          #context는 Dockerfile이 포함된 디렉토리의 상대경로
          push: true
          tags: ${{ env.Image }}
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.SSH_PORT }}

          #최초 이미지 빌드 및 컨테이너 생성 시에 대한 에러 처리를 위해 if~else 조건문 추가
          script: |
            docker stop ${{ env.Container }}
            docker rm "${{ env.Container }}"
            docker rmi "${{ env.Image }}" 
            docker pull "${{ env.Image }}"
            docker run -d --name "${{ env.Container }}" -p 80:3000 "${{ env.Image }}"
